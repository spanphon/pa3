---
format: gfm
---

## Load libraries and data

```{r}
#| label: setup

min_adj <- function(...) {
  list(
    theme_minimal(...),
    theme(
      axis.title.y = element_text(size = rel(.9), hjust = 0.95),
      axis.title.x = element_text(size = rel(.9), hjust = 0.95),
      panel.grid.major = element_line(colour = 'grey90', linewidth = 0.15),
      panel.grid.minor = element_line(colour = 'grey90', linewidth = 0.15))
  )
}
```

```{r}
#| label: libs
#| message: false
#| warning: false

library("tidyverse")
```

```{r}
#| label: load-data
vowels <- read_csv("./data/vowel_data.csv")
```



## Descriptive statistics

```{r}
#| label: descriptives
# Calculate means and standard deviations of your English/Spanish vowels ------
vowels |> 
  group_by(vowel, language) |> 
  summarize(
    f1_mean = mean(f1_cent), f1_sd = sd(f1_cent),
    f2_mean = mean(f2_cent), f2_sd = sd(f2_cent), 
    .groups = "drop"
  ) |> 
  mutate_if(is.numeric, round, digits = 2) |> 
  mutate(
    f1 = paste0(f1_mean, " (", f1_sd, ")"), 
    f2 = paste0(f2_mean, " (", f2_sd, ")")
  ) |> 
  select(vowel, language, f1, f2) %>% 
  knitr::kable(format = "html")
```


## Plots

```{r}
#| label: plot1
#| dpi: 300
#| fig-asp: 0.56
#| out-width: "100%"
# 1. Plot trajectory length as a function of vowel and language ---------------
vowels |> 
  ggplot() +
  aes(x = vowel, y = tl, fill = language) + 
  stat_summary(
    fun.data = mean_cl_boot, geom = "pointrange", color = "grey40", 
    position = position_dodge(0.5), pch = 21
  ) + 
  scale_fill_viridis_d(option = "C") + 
  coord_cartesian(ylim = c(0, 1300)) + 
  labs(
    title = "Formant movement", 
    subtitle = "Trajectory length for Spanish/English cardinal vowels", 
    y = "Trajectory length (hz)", x = NULL, 
    caption = "Mean +/- 95% CI"
  ) + 
  min_adj(base_size = 16)
```





```{r}
#| label: plot2
#| dpi: 300
#| fig-asp: 0.56
#| out-width: "100%"
# 2. Plot F1 as a function of vowel and language ------------------------------
vowels |> 
  ggplot() + 
  aes(x = vowel, y = f1_cent, fill = language) + 
  geom_point(position = position_dodge(0.5), alpha = 0.2) + 
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange", 
               position = position_dodge(0.5), pch = 21) + 
  min_adj(base_size = 16)
```





```{r}
#| label: plot3
#| dpi: 300
#| fig-asp: 0.56
#| out-width: "100%"
# 3. Plot F2 as a function of vowel and language ------------------------------
vowels |> 
  ggplot() +
  aes(x = vowel, y = f2_cent, fill = language) + 
  geom_point(position = position_dodge(0.5), alpha = 0.2) + 
  stat_summary(fun.data = mean_cl_boot, geom = "pointrange", 
               position = position_dodge(0.5), pch = 21) + 
  min_adj(base_size = 16)
```







## Challenge (bonus points)

```{r}
#| label: plot4
#| dpi: 300
#| fig-asp: 0.56
#| out-width: "100%"
# Plot trajectory length in the F1/F2 vowel space -----------------------------

#
# Hints: 
# You will need to do some intense data manipulations first
# Check the help files for pivot_longer (?pivot_longer)
# You will need a combination of group_by, summarize, and pivot_longer 
# (in that order)
#

long_trajectories <- vowels |> 
  group_by(vowel, language) |> 
  summarize(f1_20 = mean(f1_20), 
            f1_35 = mean(f1_35), 
            f1_50 = mean(f1_50), 
            f1_65 = mean(f1_65), 
            f1_80 = mean(f1_80), 
            f2_20 = mean(f2_20), 
            f2_35 = mean(f2_35), 
            f2_50 = mean(f2_50), 
            f2_65 = mean(f2_65), 
            f2_80 = mean(f2_80), .groups = "drop") |> 
  pivot_longer(
    cols = starts_with("f"), 
    names_to = c(".value", "perc"), 
    names_sep = "_"
  )

end_point <- long_trajectories |> 
  filter(perc == 80)

long_trajectories |> 
  ggplot() +
  aes(x = f2, y = f1, color = language, group = vowel) + 
  facet_grid(. ~ language) + 
  geom_path(color = "grey40", linewidth = 1.25) + 
  geom_point(data = end_point, pch = 21, size = 7, fill = "white") + 
  geom_text(data = end_point, aes(label = vowel), size = 3) + 
  scale_y_reverse() + 
  scale_x_reverse() + 
  min_adj(base_size = 16)
```




## FREEBIE

```{r}
#| label: plot5
#| dpi: 300
#| out-width: "100%"
#| fig-asp: 0.56
# Plot both vowel spaces together ---------------------------------------------

vowel_means <- vowels |> 
  group_by(vowel, language) |> 
  summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent), 
    .groups = "drop") |> 
  mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3), 
         vowel = forcats::fct_reorder2(vowel, vowel, order)) |> 
  arrange(order)

vowels |> 
  mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) |> 
  ggplot() + 
  aes(x = f2_cent, y = f1_cent, color = language, label = vowel) +
  geom_text(size = 3.5, alpha = 0.6, show.legend = T) + 
  geom_path(
    data = vowel_means, 
    aes(group = language, lty = language), 
    color = "grey"
  ) + 
  geom_text(data = vowel_means, show.legend = F, size = 7) + 
  scale_y_reverse() + 
  scale_x_reverse() + 
  scale_color_brewer(palette = "Set1") + 
  labs(
    title = "Vowel space comparison", 
    subtitle = "Spectral centroids of English/Spanish cardinal vowels", 
    y = "F1 (hz)", x = "F2 (hz)"
  ) + 
  min_adj(base_size = 16)
```
